package homework;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author akin
 */
public class ManageProduct extends javax.swing.JFrame {

    DefaultTableModel model;
    DefaultTableModel model2;
    public ManageProduct() {
        
        initComponents();
        model = (DefaultTableModel) manageTable.getModel();
        fillbaby();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        quantity = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        category = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        manageTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        logOutButton = new javax.swing.JButton();
        box_category = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        box_ffilter = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        barcode = new javax.swing.JLabel();
        tfBarcode = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));
        jPanel1.setForeground(new java.awt.Color(51, 255, 255));

        panel.setBackground(new java.awt.Color(255, 204, 204));
        panel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel1.setText("NAME");

        name.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));
        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel3.setText("PRICE");

        price.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));

        quantity.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));

        jLabel4.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel4.setText("QUANTITY");

        jLabel5.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        jLabel5.setText("CATEGORY");

        category.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));
        category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryActionPerformed(evt);
            }
        });

        buttonAdd.setBackground(new java.awt.Color(204, 255, 255));
        buttonAdd.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        buttonAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homework/add-circle-line.png"))); // NOI18N
        buttonAdd.setText("ADD");
        buttonAdd.setBorderPainted(false);
        buttonAdd.setContentAreaFilled(false);
        buttonAdd.setMaximumSize(new java.awt.Dimension(109, 57));
        buttonAdd.setMinimumSize(new java.awt.Dimension(109, 57));
        buttonAdd.setPreferredSize(new java.awt.Dimension(109, 57));
        buttonAdd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonAddMouseClicked(evt);
            }
        });
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonEdit.setBackground(new java.awt.Color(255, 204, 204));
        buttonEdit.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homework/edit-2-line.png"))); // NOI18N
        buttonEdit.setText("EDIT");
        buttonEdit.setBorderPainted(false);
        buttonEdit.setContentAreaFilled(false);
        buttonEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonEditMouseClicked(evt);
            }
        });
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonDelete.setBackground(new java.awt.Color(204, 255, 255));
        buttonDelete.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homework/delete-bin-5-line.png"))); // NOI18N
        buttonDelete.setText("DELETE");
        buttonDelete.setBorderPainted(false);
        buttonDelete.setContentAreaFilled(false);
        buttonDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonDeleteMouseClicked(evt);
            }
        });
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        manageTable.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        manageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "BARCODE", "NAME", "ACTIVE CHEMICAL", "TYPE OF PRESCRIPTION", "PRICE", "COLOR", "QUANTITY", "CATEGORY"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        manageTable.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(manageTable);
        if (manageTable.getColumnModel().getColumnCount() > 0) {
            manageTable.getColumnModel().getColumn(0).setPreferredWidth(25);
            manageTable.getColumnModel().getColumn(1).setPreferredWidth(400);
            manageTable.getColumnModel().getColumn(4).setPreferredWidth(1);
            manageTable.getColumnModel().getColumn(6).setPreferredWidth(1);
        }
        manageTable.getAccessibleContext().setAccessibleName("");
        manageTable.getAccessibleContext().setAccessibleDescription("");

        jLabel2.setFont(new java.awt.Font("Monospaced", 0, 48)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("MANAGE PRODUCT");

        logOutButton.setBackground(new java.awt.Color(255, 204, 204));
        logOutButton.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        logOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homework/logout-box-r-line.png"))); // NOI18N
        logOutButton.setText("LOGOUT");
        logOutButton.setToolTipText("");
        logOutButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));
        logOutButton.setBorderPainted(false);
        logOutButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logOutButtonMouseClicked(evt);
            }
        });
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        box_category.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        box_category.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Mother Baby Care", "Dermacosmetic", "Pharmacy" }));
        box_category.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                box_categoryMouseClicked(evt);
            }
        });
        box_category.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_categoryActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jLabel6.setText("FILTER");

        box_ffilter.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        box_ffilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "PRICE ASCENDING", "PRICE DESCENDING" }));
        box_ffilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                box_ffilterActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Monospaced", 0, 12)); // NOI18N
        jButton1.setText("MANAGE SYSTEM");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.lightGray, java.awt.Color.white));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        barcode.setFont(new java.awt.Font("Monospaced", 0, 18)); // NOI18N
        barcode.setText("BARCODE");

        tfBarcode.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.white, java.awt.Color.darkGray, java.awt.Color.white));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(114, 114, 114)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 66, Short.MAX_VALUE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(price, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addComponent(barcode)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(tfBarcode, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(50, 50, 50))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(category, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(149, 149, 149))
                                .addGroup(panelLayout.createSequentialGroup()
                                    .addComponent(quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())))
                        .addGroup(panelLayout.createSequentialGroup()
                            .addGap(180, 180, 180)
                            .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(225, 225, 225)
                            .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(365, 365, 365)
                        .addComponent(logOutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(box_category, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1342, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(box_ffilter, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(name))
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(quantity)))
                        .addGap(11, 11, 11)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(price))
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(category))))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addComponent(logOutButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6)))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(barcode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tfBarcode)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(box_ffilter, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(14, 14, 14)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(box_category, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonEdit)
                    .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 381, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 102, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonEditActionPerformed

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        
        
    }//GEN-LAST:event_buttonAddActionPerformed

    private void categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_categoryActionPerformed

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonAddMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonAddMouseClicked
        if(validateFields()){
        for (int i = 0; i < model.getRowCount(); i++) {
                 if(model.getValueAt(i, 1).toString().equalsIgnoreCase(name.getText().toString()) || Integer.parseInt(model.getValueAt(i,0).toString())==Integer.parseInt(tfBarcode.getText().toString()))
                 {
                     JOptionPane.showMessageDialog(ManageProduct.this, "This Prodcut Have Been Already Added");
                     manageTable.clearSelection();
                     return;                     
             }
        }           
        model.insertRow(manageTable.getRowCount(), new Object[]{
                   tfBarcode.getText(),name.getText().toString()," "," ",price.getText()," ",quantity.getText(),category.getText()   
        }            
        );
        updateTxt();
        resetFields();       
    }//GEN-LAST:event_buttonAddMouseClicked
    }
    private void buttonDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonDeleteMouseClicked
        
        if(manageTable.getSelectedRowCount()>1)
        {           
            JOptionPane.showMessageDialog(ManageProduct.this, "You selected too many items.");
            manageTable.clearSelection();
            return;
        }
        if(manageTable.getSelectedRow()==-1)
        {
            JOptionPane.showMessageDialog(ManageProduct.this, "Please Select Any Row From Table");
            return;
        }
        model.removeRow(manageTable.getSelectedRow()); 
        updateTxt();
        
    }//GEN-LAST:event_buttonDeleteMouseClicked

    private void updateTxt(){
        if(box_category.getSelectedItem().toString().equalsIgnoreCase("Mother Baby Care")){
                ArrayList<BabyMotherCare> list = new ArrayList<>();
                //barcode,name,price,quantity,category 0 1 4 5 6
                int i=0;
                while (i<model.getRowCount()) {
                    BabyMotherCare product = new BabyMotherCare(model.getValueAt(i,0).toString(),model.getValueAt(i,1).toString(),Double.parseDouble(model.getValueAt(i,4).toString()),Integer.parseInt(model.getValueAt(i,6).toString()),model.getValueAt(i,7).toString());
                    i++;
                    list.add(product);
                    
                }  
                FileOperations.updateMomBabyTxt(list);
            }
            else if(box_category.getSelectedItem().toString().equalsIgnoreCase("Dermacosmetic")){
                ArrayList<Dermacosmetic> list = new ArrayList<>();
                int i=0;
                while (i<model.getRowCount()) {
                    Dermacosmetic product = new Dermacosmetic(model.getValueAt(i,0).toString(),model.getValueAt(i,1).toString(),Double.parseDouble(model.getValueAt(i,4).toString()),Integer.parseInt(model.getValueAt(i,6).toString()),model.getValueAt(i,7).toString());
                    i++;
                    list.add(product);
                    
                }  
                FileOperations.updateDermacosmeticTxt(list);
            }
            else{
                ArrayList<Medicament> list = new ArrayList<>();
                int i=0;
                while(i<model.getRowCount()){
                    Medicament product = new Medicament(model.getValueAt(i,0).toString(),model.getValueAt(i,1).toString(),model.getValueAt(i,2).toString(),model.getValueAt(i,3).toString(),Double.parseDouble(model.getValueAt(i,4).toString()),model.getValueAt(i,5).toString(),Integer.parseInt(model.getValueAt(i,6).toString()));
                    i++;
                    list.add(product);
                }
                
            }
    }
    private void buttonEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonEditMouseClicked
        
        if(manageTable.getSelectedRowCount()>1)
        {           
            JOptionPane.showMessageDialog(ManageProduct.this, " You selected too many items.");
            manageTable.clearSelection();
            return;
        }
        
        if(manageTable.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(ManageProduct.this, "Please Select Any Row From Table");
            return;
        }
        else{
            
            if(name.getText().equalsIgnoreCase("") ||price.getText().equalsIgnoreCase("") ||quantity.getText().equalsIgnoreCase("") ){
                name.setText(model.getValueAt(manageTable.getSelectedRow(),1).toString());
                price.setText(model.getValueAt(manageTable.getSelectedRow(), 4).toString());
                quantity.setText(model.getValueAt(manageTable.getSelectedRow(),6).toString());
                tfBarcode.setText(model.getValueAt(manageTable.getSelectedRow(), 0).toString());
                return;   
            }
            model.setValueAt(name.getText(), manageTable.getSelectedRow(), 1);
            model.setValueAt(price.getText(), manageTable.getSelectedRow(), 4);
            model.setValueAt(quantity.getText(), manageTable.getSelectedRow(), 6);
            /*
            if(box_category.getSelectedItem().toString().equalsIgnoreCase("Mother Baby Care")){
                ArrayList<BabyMotherCare> list = new ArrayList<>();
                //barcode,name,price,quantity,category 0 1 4 5 6
                int i=0;
                while (i<model.getRowCount()) {
                    BabyMotherCare product = new BabyMotherCare(model.getValueAt(i,0).toString(),model.getValueAt(i,1).toString(),Double.parseDouble(model.getValueAt(i,4).toString()),Integer.parseInt(model.getValueAt(i,6).toString()),model.getValueAt(i,7).toString());
                    i++;
                    list.add(product);
                    
                }  
                FileOperations.updateMomBabyTxt(list);
            }
            else if(box_category.getSelectedItem().toString().equalsIgnoreCase("Dermacosmetic")){
                ArrayList<Dermacosmetic> list = new ArrayList<>();
                int i=0;
                while (i<model.getRowCount()) {
                    Dermacosmetic product = new Dermacosmetic(model.getValueAt(i,0).toString(),model.getValueAt(i,1).toString(),Double.parseDouble(model.getValueAt(i,4).toString()),Integer.parseInt(model.getValueAt(i,6).toString()),model.getValueAt(i,7).toString());
                    i++;
                    list.add(product);
                    
                }  
                FileOperations.updateDermacosmeticTxt(list);
            }
            else{
                ArrayList<Medicament> list = new ArrayList<>();
                int i=0;
                while(i<model.getRowCount()){
                    Medicament product = new Medicament(model.getValueAt(i,0).toString(),model.getValueAt(i,1).toString(),model.getValueAt(i,2).toString(),model.getValueAt(i,3).toString(),Double.parseDouble(model.getValueAt(i,4).toString()),model.getValueAt(i,5).toString(),Integer.parseInt(model.getValueAt(i,6).toString()));
                    i++;
                    list.add(product);
                }
               
            }
            */ 
            updateTxt();
            
            resetFields();
        }
        
               
    }//GEN-LAST:event_buttonEditMouseClicked

    private void panelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelMouseClicked
        manageTable.clearSelection();
    }//GEN-LAST:event_panelMouseClicked

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void logOutButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logOutButtonMouseClicked
        this.dispose();
        Login lg = new Login();
        lg.setVisible(true);
    }//GEN-LAST:event_logOutButtonMouseClicked

    private void box_categoryMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_box_categoryMouseClicked
             
        
    }//GEN-LAST:event_box_categoryMouseClicked

    private void box_categoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_categoryActionPerformed
        if(box_category.getSelectedItem().toString().equalsIgnoreCase("Mother Baby Care")){               
               remove_table();                
                fillbaby();
        }
        else if(box_category.getSelectedItem().toString().equalsIgnoreCase("Dermacosmetic")){
         remove_table();       
            filldermacosmetic();
        }
        else{
         remove_table();       
            fillpharcarmy();
        }
        
    }//GEN-LAST:event_box_categoryActionPerformed

    private void box_ffilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_box_ffilterActionPerformed
            if(box_category.getSelectedItem().toString().equalsIgnoreCase("Mother Baby Care")){               
               remove_table();                
                fillbaby();
        }
        else if(box_category.getSelectedItem().toString().equalsIgnoreCase("Dermacosmetic")){
             remove_table();       
            filldermacosmetic();
        }
        else{
//            remove_table();       
            fillpharcarmy();
        }
    }//GEN-LAST:event_box_ffilterActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        this.dispose();
        ManageSystem edit = new ManageSystem();
        edit.setVisible(true);
    }//GEN-LAST:event_jButton1MouseClicked
    public void remove_table()
    {
        while (model.getRowCount()>0) {
             for (int i = 0; i < model.getRowCount(); i++) {
                 model.removeRow(i);     
             }
        }
    }
    public void fillbaby(){
            
        ArrayList<BabyMotherCare> baby= FileOperations.readMotherBabyCareList();
        if(box_ffilter.getSelectedItem().toString().equalsIgnoreCase("price ascending")){
            Collections.sort(baby, Comparator.comparing(Product::getPrice));
            for (BabyMotherCare product : baby) {
                 model.insertRow(manageTable.getRowCount(), new Object[]{
                 product.getBarcode(),product.getProductName()," "," ",product.getPrice()," ",product.getStockQ(),product.getCategory()
            });               
        }   
        }
        else if(box_ffilter.getSelectedItem().toString().equalsIgnoreCase("price descending"))
        {           
            Collections.sort(baby, Comparator.comparing(Product::getPrice));
            
            for (int i = baby.size()-1; i >0; i--) {
                
                 model.insertRow(manageTable.getRowCount(), new Object[]{
                 baby.get(i).getBarcode(),baby.get(i).getProductName()," "," ",baby.get(i).getPrice()," ",baby.get(i).getStockQ(),baby.get(i).getCategory()
            });               
            }            
        }         
    }
    public void fillpharcarmy(){
          
        ArrayList<Medicament> pharcarmy= FileOperations.readMedicamentList();
        
         if(box_ffilter.getSelectedItem().toString().equalsIgnoreCase("price ascending")){
            Collections.sort(pharcarmy, Comparator.comparing(Medicament::getPrice));
            for (Medicament product : pharcarmy) {
                 model.insertRow(manageTable.getRowCount(), new Object[]{
                 product.getBarcode(),product.getProductName()," "," ",product.getPrice()," ",product.getStockQ()
            });               
        }   
        }
        else if(box_ffilter.getSelectedItem().toString().equalsIgnoreCase("price descending"))
        {           
            Collections.sort(pharcarmy, Comparator.comparing(Medicament::getPrice));
            int index=0;
            for (int i = pharcarmy.size()-1; i >0; i--) {               
                 model.insertRow(manageTable.getRowCount(), new Object[]{
                 pharcarmy.get(i).getBarcode(),pharcarmy.get(i).getProductName()," "," ",pharcarmy.get(i).getPrice()," ",pharcarmy.get(i).getStockQ()
            });               
            }            
        }
        
    }
    public void filldermacosmetic(){
        
        ArrayList<Dermacosmetic> Derma= FileOperations.readDermacosmeticList();
        if(box_ffilter.getSelectedItem().toString().equalsIgnoreCase("price ascending")){
            Collections.sort(Derma, Comparator.comparing(Dermacosmetic::getPrice));
            for (Dermacosmetic product : Derma) {
                 model.insertRow(manageTable.getRowCount(), new Object[]{
                 product.getBarcode(),product.getProductName()," "," ",product.getPrice()," ",product.getStockQ()
            });               
        }   
        }
        else if(box_ffilter.getSelectedItem().toString().equalsIgnoreCase("price descending"))
        {           
            Collections.sort(Derma, Comparator.comparing(Dermacosmetic::getPrice));
            int index=0;
            for (int i = Derma.size()-1; i >0; i--) {
                 model.insertRow(manageTable.getRowCount(), new Object[]{
                 Derma.get(i).getBarcode(),Derma.get(i).getProductName()," "," ",Derma.get(i).getPrice()," ",Derma.get(i).getStockQ()
            });               
            }            
        }
        
    }
    public void fullthetable() {
          
        fillpharcarmy();
        fillbaby();
        filldermacosmetic();
    }
    public void resetFields(){
        name.setText("");
        price.setText("");
        category.setText("");
        quantity.setText("");  
    }
    public boolean validateFields(){
        if (name.getText().isEmpty()) {
            JOptionPane.showMessageDialog(ManageProduct.this, "Enter Any Name");
            name.grabFocus();
            return false;
        }
        if(price.getText().isEmpty()){
            JOptionPane.showMessageDialog(ManageProduct.this, "Enter Any Price");
            price.grabFocus();
            return false;
        }
        if (quantity.getText().isEmpty()) {
            JOptionPane.showMessageDialog(ManageProduct.this, "Enter Any Quantity");
            quantity.grabFocus();
            return false;
        }
        
        if(tfBarcode.getText().isEmpty()){
            JOptionPane.showMessageDialog(ManageProduct.this, "Enter Any Category");
            category.grabFocus();
            return false;
        }
        return true;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        
       
        
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProduct.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
       
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                ManageProduct mng =new ManageProduct();
                mng.setVisible(true);
                
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel barcode;
    private javax.swing.JComboBox<String> box_category;
    private javax.swing.JComboBox<String> box_ffilter;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JTextField category;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutButton;
    private javax.swing.JTable manageTable;
    private javax.swing.JTextField name;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField price;
    private javax.swing.JTextField quantity;
    private javax.swing.JTextField tfBarcode;
    // End of variables declaration//GEN-END:variables
}
